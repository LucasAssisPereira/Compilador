Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    EMPTY
    MINUS
    READ

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID SEMICOLON declarations block DOT
Rule 2     declarations -> VAR declarations_list
Rule 3     declarations -> empty
Rule 4     declarations_list -> ID COLON type SEMICOLON declarations_list
Rule 5     declarations_list -> ID COLON type declarations_list
Rule 6     declarations_list -> empty
Rule 7     type -> INTEGER
Rule 8     block -> BEGIN statements END
Rule 9     statements -> statement SEMICOLON statements
Rule 10    statements -> empty
Rule 11    expression -> expression PLUS expression
Rule 12    expression -> term
Rule 13    expression -> expression COMMA expression
Rule 14    term -> factor
Rule 15    term -> term TIMES factor
Rule 16    term -> term DIVIDE factor
Rule 17    factor -> NUM
Rule 18    factor -> ID
Rule 19    factor -> STRING
Rule 20    statement -> WRITE LPAREN expression RPAREN
Rule 21    statement -> ID ASSIGN expression
Rule 22    empty -> <empty>

Terminals, with rules where they appear

ASSIGN               : 21
BEGIN                : 8
COLON                : 4 5
COMMA                : 13
DIVIDE               : 16
DOT                  : 1
EMPTY                : 
END                  : 8
ID                   : 1 4 5 18 21
INTEGER              : 7
LPAREN               : 20
MINUS                : 
NUM                  : 17
PLUS                 : 11
PROGRAM              : 1
READ                 : 
RPAREN               : 20
SEMICOLON            : 1 4 9
STRING               : 19
TIMES                : 15
VAR                  : 2
WRITE                : 20
error                : 

Nonterminals, with rules where they appear

block                : 1
declarations         : 1
declarations_list    : 2 4 5
empty                : 3 6 10
expression           : 11 11 13 13 20 21
factor               : 14 15 16
program              : 0
statement            : 9
statements           : 8 9
term                 : 12 15 16
type                 : 4 5

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID SEMICOLON declarations block DOT

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID SEMICOLON declarations block DOT

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . SEMICOLON declarations block DOT

    SEMICOLON       shift and go to state 4


state 4

    (1) program -> PROGRAM ID SEMICOLON . declarations block DOT
    (2) declarations -> . VAR declarations_list
    (3) declarations -> . empty
    (22) empty -> .

    VAR             shift and go to state 6
    BEGIN           reduce using rule 22 (empty -> .)

    declarations                   shift and go to state 5
    empty                          shift and go to state 7

state 5

    (1) program -> PROGRAM ID SEMICOLON declarations . block DOT
    (8) block -> . BEGIN statements END

    BEGIN           shift and go to state 9

    block                          shift and go to state 8

state 6

    (2) declarations -> VAR . declarations_list
    (4) declarations_list -> . ID COLON type SEMICOLON declarations_list
    (5) declarations_list -> . ID COLON type declarations_list
    (6) declarations_list -> . empty
    (22) empty -> .

    ID              shift and go to state 11
    BEGIN           reduce using rule 22 (empty -> .)

    declarations_list              shift and go to state 10
    empty                          shift and go to state 12

state 7

    (3) declarations -> empty .

    BEGIN           reduce using rule 3 (declarations -> empty .)


state 8

    (1) program -> PROGRAM ID SEMICOLON declarations block . DOT

    DOT             shift and go to state 13


state 9

    (8) block -> BEGIN . statements END
    (9) statements -> . statement SEMICOLON statements
    (10) statements -> . empty
    (20) statement -> . WRITE LPAREN expression RPAREN
    (21) statement -> . ID ASSIGN expression
    (22) empty -> .

    WRITE           shift and go to state 17
    ID              shift and go to state 18
    END             reduce using rule 22 (empty -> .)

    statements                     shift and go to state 14
    statement                      shift and go to state 15
    empty                          shift and go to state 16

state 10

    (2) declarations -> VAR declarations_list .

    BEGIN           reduce using rule 2 (declarations -> VAR declarations_list .)


state 11

    (4) declarations_list -> ID . COLON type SEMICOLON declarations_list
    (5) declarations_list -> ID . COLON type declarations_list

    COLON           shift and go to state 19


state 12

    (6) declarations_list -> empty .

    BEGIN           reduce using rule 6 (declarations_list -> empty .)


state 13

    (1) program -> PROGRAM ID SEMICOLON declarations block DOT .

    $end            reduce using rule 1 (program -> PROGRAM ID SEMICOLON declarations block DOT .)


state 14

    (8) block -> BEGIN statements . END

    END             shift and go to state 20


state 15

    (9) statements -> statement . SEMICOLON statements

    SEMICOLON       shift and go to state 21


state 16

    (10) statements -> empty .

    END             reduce using rule 10 (statements -> empty .)


state 17

    (20) statement -> WRITE . LPAREN expression RPAREN

    LPAREN          shift and go to state 22


state 18

    (21) statement -> ID . ASSIGN expression

    ASSIGN          shift and go to state 23


state 19

    (4) declarations_list -> ID COLON . type SEMICOLON declarations_list
    (5) declarations_list -> ID COLON . type declarations_list
    (7) type -> . INTEGER

    INTEGER         shift and go to state 25

    type                           shift and go to state 24

state 20

    (8) block -> BEGIN statements END .

    DOT             reduce using rule 8 (block -> BEGIN statements END .)


state 21

    (9) statements -> statement SEMICOLON . statements
    (9) statements -> . statement SEMICOLON statements
    (10) statements -> . empty
    (20) statement -> . WRITE LPAREN expression RPAREN
    (21) statement -> . ID ASSIGN expression
    (22) empty -> .

    WRITE           shift and go to state 17
    ID              shift and go to state 18
    END             reduce using rule 22 (empty -> .)

    statement                      shift and go to state 15
    statements                     shift and go to state 26
    empty                          shift and go to state 16

state 22

    (20) statement -> WRITE LPAREN . expression RPAREN
    (11) expression -> . expression PLUS expression
    (12) expression -> . term
    (13) expression -> . expression COMMA expression
    (14) term -> . factor
    (15) term -> . term TIMES factor
    (16) term -> . term DIVIDE factor
    (17) factor -> . NUM
    (18) factor -> . ID
    (19) factor -> . STRING

    NUM             shift and go to state 30
    ID              shift and go to state 31
    STRING          shift and go to state 32

    expression                     shift and go to state 27
    term                           shift and go to state 28
    factor                         shift and go to state 29

state 23

    (21) statement -> ID ASSIGN . expression
    (11) expression -> . expression PLUS expression
    (12) expression -> . term
    (13) expression -> . expression COMMA expression
    (14) term -> . factor
    (15) term -> . term TIMES factor
    (16) term -> . term DIVIDE factor
    (17) factor -> . NUM
    (18) factor -> . ID
    (19) factor -> . STRING

    NUM             shift and go to state 30
    ID              shift and go to state 31
    STRING          shift and go to state 32

    expression                     shift and go to state 33
    term                           shift and go to state 28
    factor                         shift and go to state 29

state 24

    (4) declarations_list -> ID COLON type . SEMICOLON declarations_list
    (5) declarations_list -> ID COLON type . declarations_list
    (4) declarations_list -> . ID COLON type SEMICOLON declarations_list
    (5) declarations_list -> . ID COLON type declarations_list
    (6) declarations_list -> . empty
    (22) empty -> .

    SEMICOLON       shift and go to state 34
    ID              shift and go to state 11
    BEGIN           reduce using rule 22 (empty -> .)

    declarations_list              shift and go to state 35
    empty                          shift and go to state 12

state 25

    (7) type -> INTEGER .

    SEMICOLON       reduce using rule 7 (type -> INTEGER .)
    ID              reduce using rule 7 (type -> INTEGER .)
    BEGIN           reduce using rule 7 (type -> INTEGER .)


state 26

    (9) statements -> statement SEMICOLON statements .

    END             reduce using rule 9 (statements -> statement SEMICOLON statements .)


state 27

    (20) statement -> WRITE LPAREN expression . RPAREN
    (11) expression -> expression . PLUS expression
    (13) expression -> expression . COMMA expression

    RPAREN          shift and go to state 36
    PLUS            shift and go to state 37
    COMMA           shift and go to state 38


state 28

    (12) expression -> term .
    (15) term -> term . TIMES factor
    (16) term -> term . DIVIDE factor

    RPAREN          reduce using rule 12 (expression -> term .)
    PLUS            reduce using rule 12 (expression -> term .)
    COMMA           reduce using rule 12 (expression -> term .)
    SEMICOLON       reduce using rule 12 (expression -> term .)
    TIMES           shift and go to state 39
    DIVIDE          shift and go to state 40


state 29

    (14) term -> factor .

    TIMES           reduce using rule 14 (term -> factor .)
    DIVIDE          reduce using rule 14 (term -> factor .)
    RPAREN          reduce using rule 14 (term -> factor .)
    PLUS            reduce using rule 14 (term -> factor .)
    COMMA           reduce using rule 14 (term -> factor .)
    SEMICOLON       reduce using rule 14 (term -> factor .)


state 30

    (17) factor -> NUM .

    TIMES           reduce using rule 17 (factor -> NUM .)
    DIVIDE          reduce using rule 17 (factor -> NUM .)
    RPAREN          reduce using rule 17 (factor -> NUM .)
    PLUS            reduce using rule 17 (factor -> NUM .)
    COMMA           reduce using rule 17 (factor -> NUM .)
    SEMICOLON       reduce using rule 17 (factor -> NUM .)


state 31

    (18) factor -> ID .

    TIMES           reduce using rule 18 (factor -> ID .)
    DIVIDE          reduce using rule 18 (factor -> ID .)
    RPAREN          reduce using rule 18 (factor -> ID .)
    PLUS            reduce using rule 18 (factor -> ID .)
    COMMA           reduce using rule 18 (factor -> ID .)
    SEMICOLON       reduce using rule 18 (factor -> ID .)


state 32

    (19) factor -> STRING .

    TIMES           reduce using rule 19 (factor -> STRING .)
    DIVIDE          reduce using rule 19 (factor -> STRING .)
    RPAREN          reduce using rule 19 (factor -> STRING .)
    PLUS            reduce using rule 19 (factor -> STRING .)
    COMMA           reduce using rule 19 (factor -> STRING .)
    SEMICOLON       reduce using rule 19 (factor -> STRING .)


state 33

    (21) statement -> ID ASSIGN expression .
    (11) expression -> expression . PLUS expression
    (13) expression -> expression . COMMA expression

    SEMICOLON       reduce using rule 21 (statement -> ID ASSIGN expression .)
    PLUS            shift and go to state 37
    COMMA           shift and go to state 38


state 34

    (4) declarations_list -> ID COLON type SEMICOLON . declarations_list
    (4) declarations_list -> . ID COLON type SEMICOLON declarations_list
    (5) declarations_list -> . ID COLON type declarations_list
    (6) declarations_list -> . empty
    (22) empty -> .

    ID              shift and go to state 11
    BEGIN           reduce using rule 22 (empty -> .)

    declarations_list              shift and go to state 41
    empty                          shift and go to state 12

state 35

    (5) declarations_list -> ID COLON type declarations_list .

    BEGIN           reduce using rule 5 (declarations_list -> ID COLON type declarations_list .)


state 36

    (20) statement -> WRITE LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 20 (statement -> WRITE LPAREN expression RPAREN .)


state 37

    (11) expression -> expression PLUS . expression
    (11) expression -> . expression PLUS expression
    (12) expression -> . term
    (13) expression -> . expression COMMA expression
    (14) term -> . factor
    (15) term -> . term TIMES factor
    (16) term -> . term DIVIDE factor
    (17) factor -> . NUM
    (18) factor -> . ID
    (19) factor -> . STRING

    NUM             shift and go to state 30
    ID              shift and go to state 31
    STRING          shift and go to state 32

    expression                     shift and go to state 42
    term                           shift and go to state 28
    factor                         shift and go to state 29

state 38

    (13) expression -> expression COMMA . expression
    (11) expression -> . expression PLUS expression
    (12) expression -> . term
    (13) expression -> . expression COMMA expression
    (14) term -> . factor
    (15) term -> . term TIMES factor
    (16) term -> . term DIVIDE factor
    (17) factor -> . NUM
    (18) factor -> . ID
    (19) factor -> . STRING

    NUM             shift and go to state 30
    ID              shift and go to state 31
    STRING          shift and go to state 32

    expression                     shift and go to state 43
    term                           shift and go to state 28
    factor                         shift and go to state 29

state 39

    (15) term -> term TIMES . factor
    (17) factor -> . NUM
    (18) factor -> . ID
    (19) factor -> . STRING

    NUM             shift and go to state 30
    ID              shift and go to state 31
    STRING          shift and go to state 32

    factor                         shift and go to state 44

state 40

    (16) term -> term DIVIDE . factor
    (17) factor -> . NUM
    (18) factor -> . ID
    (19) factor -> . STRING

    NUM             shift and go to state 30
    ID              shift and go to state 31
    STRING          shift and go to state 32

    factor                         shift and go to state 45

state 41

    (4) declarations_list -> ID COLON type SEMICOLON declarations_list .

    BEGIN           reduce using rule 4 (declarations_list -> ID COLON type SEMICOLON declarations_list .)


state 42

    (11) expression -> expression PLUS expression .
    (11) expression -> expression . PLUS expression
    (13) expression -> expression . COMMA expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
    RPAREN          reduce using rule 11 (expression -> expression PLUS expression .)
    SEMICOLON       reduce using rule 11 (expression -> expression PLUS expression .)
    PLUS            shift and go to state 37
    COMMA           shift and go to state 38

  ! PLUS            [ reduce using rule 11 (expression -> expression PLUS expression .) ]
  ! COMMA           [ reduce using rule 11 (expression -> expression PLUS expression .) ]


state 43

    (13) expression -> expression COMMA expression .
    (11) expression -> expression . PLUS expression
    (13) expression -> expression . COMMA expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
    RPAREN          reduce using rule 13 (expression -> expression COMMA expression .)
    SEMICOLON       reduce using rule 13 (expression -> expression COMMA expression .)
    PLUS            shift and go to state 37
    COMMA           shift and go to state 38

  ! PLUS            [ reduce using rule 13 (expression -> expression COMMA expression .) ]
  ! COMMA           [ reduce using rule 13 (expression -> expression COMMA expression .) ]


state 44

    (15) term -> term TIMES factor .

    TIMES           reduce using rule 15 (term -> term TIMES factor .)
    DIVIDE          reduce using rule 15 (term -> term TIMES factor .)
    RPAREN          reduce using rule 15 (term -> term TIMES factor .)
    PLUS            reduce using rule 15 (term -> term TIMES factor .)
    COMMA           reduce using rule 15 (term -> term TIMES factor .)
    SEMICOLON       reduce using rule 15 (term -> term TIMES factor .)


state 45

    (16) term -> term DIVIDE factor .

    TIMES           reduce using rule 16 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 16 (term -> term DIVIDE factor .)
    RPAREN          reduce using rule 16 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 16 (term -> term DIVIDE factor .)
    COMMA           reduce using rule 16 (term -> term DIVIDE factor .)
    SEMICOLON       reduce using rule 16 (term -> term DIVIDE factor .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 42 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 42 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 43 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 43 resolved as shift
